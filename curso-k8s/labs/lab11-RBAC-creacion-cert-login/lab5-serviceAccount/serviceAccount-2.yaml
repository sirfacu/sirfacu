apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-srv-account
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-account-deployment
  labels:
    app: front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      serviceAccountName: my-srv-account
      containers:
      - name: nginx
        image: nginx:alpine
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: sa-reader
rules:
- apiGroups: [""] #validar con k8s api-resources los apiGroups
  resources: ["pods"]
  verbs: ["get", "watch", "list" ]
- apiGroups: ["apps"] #validar con k8s api-resources los apiGroups
  resources: ["deployments" , "replicasets"]
  verbs: ["get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sa-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: my-srv-account
  apiGroup: ""
roleRef:
  kind: Role
  name: sa-reader
  apiGroup: rbac.authorization.k8s.io

# TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
# curl -H "Authorization: Bearer ${TOKEN}" https://kubernetes/apis/apps/v1/namespaces/default/deployments --insecure
# curl -H "Authorization: Bearer ${TOKEN}" https://kubernetes/apis/apps/v1/namespaces/default/replicasets --insecure