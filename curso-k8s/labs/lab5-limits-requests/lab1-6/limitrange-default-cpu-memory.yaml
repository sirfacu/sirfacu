apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    app: development

---    
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-cpu-limit-range
  namespace: dev
spec:
  limits:
  - default:
      memory: 512Mi
      cpu: 1
    defaultRequest:
      memory: 256Mi
      cpu: 0.5
    type: Container
---
apiVersion: v1
kind: Pod
metadata:
  name: limit-range-defaults
  namespace: dev
  labels: 
    app: development
spec:
  containers:
  - name: lr-pod1
    image: nginx:alpine

#La idea de este lab es crear un pod sin valores de limites y ver si aplica los defaults del limitrange que definimos como vemos abajo esta correcto


# kubectl get pod limit-range-defaults -o yaml -n dev | grep -i limit -A3
#      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"development"},"name":"limit-range-defaults","namespace":"dev"},"spec":{"containers":[{"image":"nginx:alpine","name":"lr-pod1"}]}}
#    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for container
#      lr-pod1; cpu, memory limit for container lr-pod1'
#  creationTimestamp: "2024-08-27T15:44:40Z"
#  labels:
#    app: development
#  name: limit-range-defaults
#  namespace: dev
#  resourceVersion: "55513"
#  uid: a81de54b-ee06-4a4d-a8c8-dc710a07b42c
#--
#      limits:
#        cpu: "1"
#        memory: 512Mi
#      requests:





# kubectl get pod limit-range-defaults -o yaml -n dev | grep -i request -A3
#     kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for container
#       lr-pod1; cpu, memory limit for container lr-pod1'
#   creationTimestamp: "2024-08-27T15:44:40Z"
#   labels:
# --
#       requests:
#         cpu: 500m
#         memory: 256Mi
#     terminationMessagePath: /dev/termination-log